{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "metadata": {
                "description": "Enter the location (i.e., app_ip)"
            },
            "allowedValues":['North Europe']
        },
        "publicIpName": {
            "type": "string",
            "metadata": {
                "description": "Enter the Public IP Name (i.e., app_ip)"
            }
        },
        "publicIpSku": {
            "type": "string",
            "metadata": {
                "description": "Enter the Public IP SKU (i.e., SKU)"
            }
        },
        "publicIPAllocationMethod": {
            "type": "string",
            "metadata": {
                "description": "Enter the value of publicIPAllocationMethod (i.e., Dynamic)"
            }
        },
        "vmName": {
            "type": "string",
            "metadata": {
                "description": "Enter the VM Name i.e., app_vm"
            }
        },
        "adminname": {
            "type": "string",
            "metadata": {
                "description": "description"
            }
        },
        "adminpassword": {
            "type": "securestring"
        }
    },
    "functions": [],
    "variables": {
        "storageAccountName": "appstorageaccount0597",
        "networkSecurityGroupName": "app_nsg",
        "virtualNetworkName": "app_vnet",
        "addressPrefix": "10.0.0.0/16",
        "subnetName":"SubnetA",
        "subnetPrefix": "10.0.1.0/24",
        "nicName": "app_nic",
        "vmSize":"Standard_D12_v2",
        "avail_set_name":"app_avail_set"
        // "extensionName": "vm_extension",
        // "extensionPublisher": "azure",
        // "extensionVersion": "Legacy"


    },
    "resources": [
        
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2023-05-01",
            "name": "[variables('storageAccountName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "Storage"
        },
        {
            "name": "[variables('avail_set_name')]",
            "type": "Microsoft.Compute/availabilitySets",
            "apiVersion": "2024-07-01",
            "location": "[parameters('location')]",
            "sku":{
                "name":"Aligned"
            },
            "properties": {
                "platformFaultDomainCount":3,
                "platformUpdateDomainCount":5
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2024-03-01",
            "name": "[parameters('publicIpName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('publicIpSku')]"
            },
            "properties": {
                "publicIPAllocationMethod": "[parameters('publicIPAllocationMethod')]"
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2024-03-01",
            "name": "[variables('networkSecurityGroupName')]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "default-allow-3389",
                        "properties": {
                            "priority": 1000,
                            "access": "Allow",
                            "direction": "Inbound",
                            "destinationPortRange": "3389",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2024-03-01",
            "name": "[variables('virtualNetworkName')]",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('subnetPrefix')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
                            }
                        }
                    }
                ]
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
            ]
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2024-03-01",
            "name": "[variables('nicName')]",
            "location": "[parameters('location')]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIpName'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('subnetName'))]"
                            }
                        }
                    }
                ]
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', parameters('publicIpName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
            ]
         }
        ,
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2024-07-01",
            "name": "[parameters('vmName')]",
            "location": "[parameters('location')]",
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[parameters('vmName')]",
                    "adminUsername": "[parameters('adminname')]",
                    "adminPassword": "[parameters('adminpassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2022-Datacenter",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "StandardSSD_LRS"
                        }
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2022-05-01').primaryEndpoints.blob]"
                    }
                },
                "availabilitySet":{
                    "id":"[resourceId('Microsoft.Compute/availabilitySets',variables('avail_set_name'))]"
                }
                
                // "securityProfile": "[if(equals(parameters('securityType'), 'TrustedLaunch'), variables('securityProfileJson'), null())]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ]
        }
    ],
    "outputs": {}
}